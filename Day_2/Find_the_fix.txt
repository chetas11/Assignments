1. Uncaught TypeError: Cannot read property -

JavaScript TypeError is thrown when an operand or argument passed to a function is incompatible with the type expected by that operator or function. This error occurs in Chrome/Firefox Browser when you read a property or call a method on an undefined object
Soln -  In basic terms, undefined means that a variable has been declared but has not yet been assigned a value. This particular error is probably easiest to understand from the perspective of undefined, since undefined is not considered an object type at all (but its own undefined type instead), and properties can only belong to objects within JavaScript.
when you get undefined error , you need to make sure that whichever variables throws undefined error, is assigned a value to it.

2. TypeError: ‘undefined’ is not an object (evaluating - 

This is an error that occurs in Safari when you read a property or call a method on an undefined object. You can test this very easily in the Safari Developer Console. This is essentially the same as the above error for Chrome, but Safari uses a different error message.


TypeError: null is not an object (evaluating

This is an error that occurs in Safari when you read a property or call a method on a null object. You can test this very easily in the Safari Developer Console.

4. (unknown): Script error

The Script error occurs when an uncaught JavaScript error crosses domain boundaries in violation of the cross-origin policy. For example, if you host your JavaScript code on a CDN, any uncaught errors (errors that bubble up to the window.onerror handler, instead of being caught in try-catch) will get reported as simply "Script error" instead of containing useful information. This is a browser security measure intended to prevent passing data across domains that otherwise wouldn’t be allowed to communicate.

5. TypeError: Object doesn’t support property

This is an error that occurs in IE when you call an undefined method. You can test this in the IE Developer Console.
This is equivalent to the error "TypeError: ‘undefined’ is not a function" in Chrome.

6. TypeError: ‘undefined’ is not a function

This is an error that occurs in Chrome when you call an undefined function. You can test this in the Chrome Developer Console and Mozilla Firefox Developer Console.

A traditional, old-browser-compliant solution is to simply save your reference to this in a variable that can then be inherited by the closure
Alternatively, in the newer browsers, you can use the bind() method to pass the proper reference:

7. Uncaught RangeError

This is an error that occurs in Chrome under a couple of circumstances. One is when you call a recursive function that does not terminate
if you pass a value to a function that is out of range. Many functions accept only a specific range of numbers for their input values.


8. TypeError: Cannot read property ‘length’

This is an error that occurs in Chrome because of reading length property for an undefined variable.


9. Uncaught TypeError: Cannot set property

When we try to access an undefined variable it always returns undefined and we cannot get or set any property of undefined. In that case, an application will throw “Uncaught TypeError cannot set property of undefined.”


10. ReferenceError: event is not defined

This error is thrown when you try to access a variable that is undefined or is outside the current scope.



refrence - https://rollbar.com/blog/top-10-javascript-errors/